# Generated by Django 5.2.3 on 2025-08-28 14:12

import django.core.validators
import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InternetPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('plan_type', models.CharField(choices=[('Paid', 'Paid'), ('Free Trial', 'Free Trial')], default='Paid', help_text='Whether the plan is paid or a free trial', max_length=20)),
                ('name', models.CharField(help_text='Unique name identifying the plan', max_length=100, unique=True)),
                ('price', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Cost of the plan in Ksh. Must be 0 for Free Trial plans', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('active', models.BooleanField(default=True, help_text='Whether the plan is currently available for purchase')),
                ('download_speed_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Numerical value of download speed (e.g., 10.00)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('download_speed_unit', models.CharField(choices=[('Kbps', 'Kilobits per second'), ('Mbps', 'Megabits per second'), ('Gbps', 'Gigabits per second')], default='Mbps', help_text='Unit of measurement for download speed', max_length=10)),
                ('upload_speed_value', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='Numerical value of upload speed (e.g., 2.00)', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('upload_speed_unit', models.CharField(choices=[('Kbps', 'Kilobits per second'), ('Mbps', 'Megabits per second'), ('Gbps', 'Gigabits per second')], default='Mbps', help_text='Unit of measurement for upload speed', max_length=10)),
                ('expiry_value', models.PositiveIntegerField(help_text='Duration after which plan expires (e.g., 30)', validators=[django.core.validators.MinValueValidator(1)])),
                ('expiry_unit', models.CharField(choices=[('Days', 'Days'), ('Months', 'Months')], default='Days', help_text='Unit of measurement for plan duration', max_length=10)),
                ('data_limit_value', models.CharField(help_text="Amount of data included in the plan (numeric or 'Unlimited')", max_length=20)),
                ('data_limit_unit', models.CharField(choices=[('GB', 'Gigabytes'), ('TB', 'Terabytes'), ('Unlimited', 'Unlimited')], default='GB', help_text='Unit of measurement for data allowance', max_length=10)),
                ('usage_limit_value', models.CharField(help_text="Maximum usage time allowed (numeric or 'Unlimited')", max_length=20)),
                ('usage_limit_unit', models.CharField(choices=[('Hours', 'Hours'), ('Unlimited', 'Unlimited')], default='Hours', help_text='Unit of measurement for usage time', max_length=10)),
                ('description', models.TextField(help_text='Detailed description of the plan features')),
                ('category', models.CharField(choices=[('Residential', 'Residential'), ('Business', 'Business'), ('Promotional', 'Promotional'), ('Enterprise', 'Enterprise')], default='Residential', help_text='Target audience for this plan', max_length=20)),
                ('purchases', models.PositiveIntegerField(default=0, help_text='Number of times this plan has been purchased')),
                ('features', models.JSONField(blank=True, default=list, help_text='List of features included in this plan')),
                ('restrictions', models.JSONField(blank=True, default=list, help_text='List of restrictions applied to this plan')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date and time when this plan was created')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date and time when this plan was last updated')),
                ('client_sessions', models.JSONField(blank=True, default=dict, help_text='Tracking data for client sessions using this plan')),
            ],
            options={
                'verbose_name': 'Internet Plan',
                'verbose_name_plural': 'Internet Plans',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='internet_pl_name_f76fde_idx'), models.Index(fields=['category'], name='internet_pl_categor_df600f_idx'), models.Index(fields=['plan_type'], name='internet_pl_plan_ty_6076ba_idx'), models.Index(fields=['active'], name='internet_pl_active_566f83_idx'), models.Index(fields=['price'], name='internet_pl_price_e438dc_idx'), models.Index(fields=['created_at'], name='internet_pl_created_858f34_idx')],
            },
        ),
        migrations.CreateModel(
            name='PlanAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uptime', models.FloatField(default=99.0, help_text='Percentage uptime (e.g., 99.5)')),
                ('last_updated', models.DateTimeField(auto_now=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='analytics', to='internet_plans.internetplan')),
            ],
            options={
                'verbose_name': 'Plan Analytic',
                'verbose_name_plural': 'Plan Analytics',
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('end_date', models.DateTimeField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to='account.client')),
                ('internet_plan', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subscriptions', to='internet_plans.internetplan')),
            ],
            options={
                'verbose_name': 'Subscription',
                'verbose_name_plural': 'Subscriptions',
                'ordering': ['-start_date'],
            },
        ),
    ]
