# Generated by Django 5.1.3 on 2025-05-31 10:11

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("account", "0002_initial"),
        ("internet_plans", "0001_initial"),
        ("network_management", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="DataUsageThreshold",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("threshold_percentage", models.FloatField(unique=True)),
                ("message_template", models.TextField()),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "verbose_name": "Data Usage Threshold",
                "verbose_name_plural": "Data Usage Thresholds",
                "ordering": ["threshold_percentage"],
            },
        ),
        migrations.CreateModel(
            name="BrowsingHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("url", models.URLField()),
                ("frequency", models.CharField(max_length=20)),
                ("data_used", models.CharField(max_length=20)),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="browsing_history",
                        to="account.client",
                    ),
                ),
            ],
            options={
                "verbose_name": "Browsing History",
                "verbose_name_plural": "Browsing Histories",
                "ordering": ["-timestamp"],
            },
        ),
        migrations.CreateModel(
            name="PlanAnalyticsSnapshot",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("total_clients", models.IntegerField()),
                ("active_clients", models.IntegerField()),
                ("high_usage_clients", models.IntegerField()),
                (
                    "collected_revenue",
                    models.DecimalField(decimal_places=2, max_digits=12),
                ),
                ("active_devices", models.IntegerField()),
                ("congested_routers", models.IntegerField()),
            ],
            options={
                "verbose_name": "Plan Analytics Snapshot",
                "verbose_name_plural": "Plan Analytics Snapshots",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["timestamp"], name="user_manage_timesta_44b943_idx"
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="ActionNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("INFO", "Information"),
                            ("SUCCESS", "Success"),
                            ("WARNING", "Warning"),
                            ("ERROR", "Error"),
                        ],
                        default="INFO",
                        max_length=10,
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("is_read", models.BooleanField(default=False)),
                (
                    "client",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="action_notifications",
                        to="account.client",
                    ),
                ),
            ],
            options={
                "verbose_name": "Action Notification",
                "verbose_name_plural": "Action Notifications",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["client", "is_read"],
                        name="user_manage_client__0ac0f8_idx",
                    ),
                    models.Index(
                        fields=["type", "created_at"],
                        name="user_manage_type_9e3dc5_idx",
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="ClientAnalytics",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
                ("data_usage_percentage", models.FloatField(blank=True, null=True)),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("Paid", "Paid"),
                            ("Due", "Due"),
                            ("Expired", "Expired"),
                        ],
                        max_length=20,
                    ),
                ),
                ("is_high_usage", models.BooleanField(default=False)),
                ("is_near_expiry", models.BooleanField(default=False)),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="analytics",
                        to="account.client",
                    ),
                ),
                (
                    "hotspot_user",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="network_management.hotspotuser",
                    ),
                ),
                (
                    "plan",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="internet_plans.internetplan",
                    ),
                ),
            ],
            options={
                "verbose_name": "Client Analytics",
                "verbose_name_plural": "Client Analytics",
                "ordering": ["-timestamp"],
                "indexes": [
                    models.Index(
                        fields=["client", "timestamp"],
                        name="user_manage_client__513264_idx",
                    ),
                    models.Index(
                        fields=["is_high_usage"], name="user_manage_is_high_af32e9_idx"
                    ),
                    models.Index(
                        fields=["is_near_expiry"], name="user_manage_is_near_45fc05_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="SMSNotification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("message", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("PENDING", "Pending"),
                            ("SENT", "Sent"),
                            ("FAILED", "Failed"),
                        ],
                        default="PENDING",
                        max_length=10,
                    ),
                ),
                (
                    "trigger",
                    models.CharField(
                        choices=[
                            ("DATA_USAGE_75", "Data Usage 75%"),
                            ("DATA_USAGE_90", "Data Usage 90%"),
                            ("EXPIRY_3_DAYS", "Plan Expiry in 3 Days"),
                            ("EXPIRY_1_DAY", "Plan Expiry in 1 Day"),
                            ("EXPIRED", "Plan Expired"),
                            ("MANUAL", "Manual"),
                            ("PAYMENT_REMINDER", "Payment Reminder"),
                        ],
                        max_length=20,
                    ),
                ),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("error", models.TextField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "delivery_status",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "client",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sms_notifications",
                        to="account.client",
                    ),
                ),
            ],
            options={
                "verbose_name": "SMS Notification",
                "verbose_name_plural": "SMS Notifications",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(
                        fields=["client", "status"],
                        name="user_manage_client__0cbba0_idx",
                    ),
                    models.Index(
                        fields=["trigger", "sent_at"],
                        name="user_manage_trigger_a66621_idx",
                    ),
                ],
            },
        ),
    ]
