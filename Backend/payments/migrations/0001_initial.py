# Generated by Django 5.2.3 on 2025-09-19 07:04

import django.core.validators
import django.db.models.deletion
import payments.fields.encrypted_text_field
import payments.models.payment_config_model
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('account', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='MpesaCallbackEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('payment_success', 'Payment Success'), ('payment_failure', 'Payment Failure'), ('transaction_cancellation', 'Transaction Cancellation'), ('balance_check', 'Balance Check'), ('reversal', 'Reversal'), ('timeout', 'Timeout'), ('validation', 'Validation'), ('confirmation', 'Confirmation')], max_length=50, unique=True)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('priority', models.IntegerField(default=1, help_text='Processing priority (1-10)')),
            ],
            options={
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MpesaCallbackSecurityProfile',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('ip_whitelist', models.JSONField(blank=True, default=list)),
                ('rate_limit_requests', models.IntegerField(default=100)),
                ('rate_limit_period', models.IntegerField(default=60, help_text='Seconds')),
                ('require_https', models.BooleanField(default=True)),
                ('signature_validation', models.BooleanField(default=True)),
                ('encryption_required', models.BooleanField(default=False)),
                ('custom_headers', models.JSONField(blank=True, default=dict)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_categories', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Expense Category',
                'verbose_name_plural': 'Expense Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MpesaCallbackConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('callback_url', models.URLField(max_length=500, validators=[django.core.validators.URLValidator()])),
                ('webhook_secret', payments.fields.encrypted_text_field.EncryptedTextField(blank=True)),
                ('security_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('retry_enabled', models.BooleanField(default=True)),
                ('max_retries', models.IntegerField(default=3, validators=[django.core.validators.MinValueValidator(0)])),
                ('timeout_seconds', models.IntegerField(default=30, validators=[django.core.validators.MinValueValidator(1)])),
                ('custom_headers', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.mpesacallbackevent')),
                ('security_profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.mpesacallbacksecurityprofile')),
            ],
        ),
        migrations.CreateModel(
            name='MpesaCallbackRule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('rule_type', models.CharField(choices=[('header_based', 'Header Based'), ('payload_based', 'Payload Based'), ('ip_based', 'IP Based'), ('geo_based', 'Geographic Based')], max_length=20)),
                ('condition', models.JSONField(help_text='Rule condition in JSON format')),
                ('priority', models.IntegerField(default=1)),
                ('is_active', models.BooleanField(default=True)),
                ('description', models.TextField(blank=True)),
                ('target_configuration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.mpesacallbackconfiguration')),
            ],
            options={
                'ordering': ['priority', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PaymentGateway',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(choices=[('mpesa_paybill', 'M-Pesa Paybill'), ('mpesa_till', 'M-Pesa Till'), ('bank_transfer', 'Bank Transfer'), ('paypal', 'PayPal')], default='paypal', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('sandbox_mode', models.BooleanField(default=True)),
                ('security_level', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('critical', 'Critical')], default='medium', max_length=10)),
                ('transaction_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(0)])),
                ('auto_settle', models.BooleanField(default=True)),
                ('webhook_secret', payments.fields.encrypted_text_field.EncryptedTextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_payment_gateways', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payment Gateway',
                'verbose_name_plural': 'Payment Gateways',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='MpesaConfig',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('consumer_key', payments.fields.encrypted_text_field.EncryptedTextField()),
                ('consumer_secret', payments.fields.encrypted_text_field.EncryptedTextField()),
                ('passkey', payments.fields.encrypted_text_field.EncryptedTextField()),
                ('paybill_number', models.CharField(blank=True, max_length=20, null=True)),
                ('till_number', models.CharField(blank=True, max_length=20, null=True)),
                ('callback_url', models.URLField(max_length=500)),
                ('initiator_name', models.CharField(blank=True, max_length=100, null=True)),
                ('security_credential', payments.fields.encrypted_text_field.EncryptedTextField(blank=True, null=True)),
                ('gateway', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='mpesaconfig', to='payments.paymentgateway')),
            ],
            options={
                'verbose_name': 'M-Pesa Configuration',
                'verbose_name_plural': 'M-Pesa Configurations',
            },
            bases=(payments.models.payment_config_model.FernetEncryptedMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ClientPaymentMethod',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_default', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to='account.client')),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='client_methods', to='payments.paymentgateway')),
            ],
            options={
                'verbose_name': 'Client Payment Method',
                'verbose_name_plural': 'Client Payment Methods',
                'ordering': ['-is_default', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BankConfig',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bank_name', models.CharField(max_length=100)),
                ('account_name', models.CharField(max_length=100)),
                ('account_number', models.CharField(max_length=50)),
                ('branch_code', models.CharField(blank=True, max_length=20, null=True)),
                ('swift_code', models.CharField(blank=True, max_length=20, null=True)),
                ('iban', models.CharField(blank=True, max_length=50, null=True)),
                ('bank_code', models.CharField(blank=True, max_length=20, null=True)),
                ('gateway', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='bankconfig', to='payments.paymentgateway')),
            ],
            options={
                'verbose_name': 'Bank Configuration',
                'verbose_name_plural': 'Bank Configurations',
            },
        ),
        migrations.CreateModel(
            name='PayPalConfig',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('client_id', payments.fields.encrypted_text_field.EncryptedTextField()),
                ('secret', payments.fields.encrypted_text_field.EncryptedTextField()),
                ('merchant_id', payments.fields.encrypted_text_field.EncryptedTextField(blank=True, null=True)),
                ('callback_url', models.URLField(max_length=500)),
                ('webhook_id', models.CharField(blank=True, max_length=100, null=True)),
                ('bn_code', models.CharField(blank=True, max_length=50, null=True)),
                ('gateway', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='paypalconfig', to='payments.paymentgateway')),
            ],
            options={
                'verbose_name': 'PayPal Configuration',
                'verbose_name_plural': 'PayPal Configurations',
            },
            bases=(payments.models.payment_config_model.FernetEncryptedMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ReconciliationReport',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('report_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('report_type', models.CharField(choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('custom', 'Custom')], default='custom', max_length=10)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_expenses', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_tax', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('net_profit', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('tax_configuration', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('generated_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='generated_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Reconciliation Report',
                'verbose_name_plural': 'Reconciliation Reports',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ReconciliationStats',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(unique=True)),
                ('total_revenue', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_expenses', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_tax', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('net_profit', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('transaction_count', models.PositiveIntegerField(default=0)),
                ('expense_count', models.PositiveIntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Reconciliation Statistic',
                'verbose_name_plural': 'Reconciliation Statistics',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['date'], name='payments_re_date_edc32a_idx')],
            },
        ),
        migrations.CreateModel(
            name='TaxConfiguration',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('tax_type', models.CharField(choices=[('vat', 'VAT'), ('withholding', 'Withholding Tax'), ('custom', 'Custom Tax')], default='custom', max_length=20)),
                ('rate', models.DecimalField(decimal_places=2, help_text='Tax rate in percentage', max_digits=5, validators=[django.core.validators.MinValueValidator(0)])),
                ('description', models.TextField(blank=True, null=True)),
                ('applies_to', models.CharField(choices=[('revenue', 'Revenue'), ('expenses', 'Expenses'), ('both', 'Both')], default='revenue', max_length=10)),
                ('is_enabled', models.BooleanField(default=True)),
                ('is_included_in_price', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_taxes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Tax Configuration',
                'verbose_name_plural': 'Tax Configurations',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12)),
                ('reference', models.CharField(blank=True, max_length=100, unique=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('metadata', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to='account.client')),
                ('gateway', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transactions', to='payments.paymentgateway')),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MpesaCallbackLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('payload', models.JSONField()),
                ('response_status', models.IntegerField(blank=True, null=True)),
                ('response_body', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('success', 'Success'), ('failed', 'Failed'), ('retrying', 'Retrying'), ('timeout', 'Timeout')], default='pending', max_length=10)),
                ('retry_count', models.IntegerField(default=0)),
                ('error_message', models.TextField(blank=True)),
                ('is_test', models.BooleanField(default=False)),
                ('processed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('configuration', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='payments.mpesacallbackconfiguration')),
                ('transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.transaction')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TransactionLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('transaction_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('success', 'Success'), ('failed', 'Failed'), ('refunded', 'Refunded')], default='pending', max_length=10)),
                ('payment_method', models.CharField(choices=[('mpesa', 'M-Pesa'), ('paypal', 'PayPal'), ('bank_transfer', 'Bank Transfer')], default='mpesa', max_length=15)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('reference_number', models.CharField(blank=True, max_length=100, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transaction_logs', to='account.client')),
                ('payment_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='payments.transaction')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='transaction_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Transaction Log',
                'verbose_name_plural': 'Transaction Logs',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TransactionLogHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('status_change', 'Status Change'), ('refund', 'Refund')], max_length=15)),
                ('old_status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('success', 'Success'), ('failed', 'Failed'), ('refunded', 'Refunded')], max_length=10, null=True)),
                ('new_status', models.CharField(blank=True, choices=[('pending', 'Pending'), ('success', 'Success'), ('failed', 'Failed'), ('refunded', 'Refunded')], max_length=10, null=True)),
                ('changes', models.JSONField(default=dict)),
                ('notes', models.TextField(blank=True, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('performed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
                ('transaction_log', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='history', to='payments.transactionlog')),
            ],
            options={
                'verbose_name': 'Transaction Log History',
                'verbose_name_plural': 'Transaction Log Histories',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='WebhookLog',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('event_type', models.CharField(max_length=100)),
                ('payload', models.JSONField()),
                ('headers', models.JSONField()),
                ('ip_address', models.GenericIPAddressField()),
                ('status_code', models.PositiveSmallIntegerField()),
                ('response', models.TextField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('gateway', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='webhook_logs', to='payments.paymentgateway')),
            ],
            options={
                'verbose_name': 'Webhook Log',
                'verbose_name_plural': 'Webhook Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ConfigurationHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete'), ('activate', 'Activate'), ('deactivate', 'Deactivate'), ('test', 'Test Connection')], max_length=20)),
                ('model', models.CharField(max_length=50)),
                ('object_id', models.CharField(max_length=36)),
                ('changes', models.JSONField(default=list)),
                ('old_values', models.JSONField(default=dict)),
                ('new_values', models.JSONField(default=dict)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payment_config_changes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Configuration History',
                'verbose_name_plural': 'Configuration Histories',
                'ordering': ['-timestamp'],
                'indexes': [models.Index(fields=['model', 'object_id'], name='payments_co_model_861578_idx'), models.Index(fields=['timestamp'], name='payments_co_timesta_5bdc82_idx')],
            },
        ),
        migrations.CreateModel(
            name='ManualExpense',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('expense_id', models.CharField(editable=False, max_length=20, unique=True)),
                ('description', models.CharField(max_length=255)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('date', models.DateField()),
                ('reference_number', models.CharField(blank=True, max_length=100, null=True)),
                ('notes', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='expenses', to='payments.expensecategory')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_expenses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Manual Expense',
                'verbose_name_plural': 'Manual Expenses',
                'ordering': ['-date'],
                'indexes': [models.Index(fields=['expense_id'], name='payments_ma_expense_f99a37_idx'), models.Index(fields=['date'], name='payments_ma_date_686219_idx'), models.Index(fields=['category'], name='payments_ma_categor_e0ba47_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='mpesacallbackconfiguration',
            index=models.Index(fields=['is_active'], name='payments_mp_is_acti_572187_idx'),
        ),
        migrations.AddIndex(
            model_name='mpesacallbackconfiguration',
            index=models.Index(fields=['security_level'], name='payments_mp_securit_cfd48f_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentgateway',
            index=models.Index(fields=['name', 'is_active'], name='payments_pa_name_1477a5_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentgateway',
            index=models.Index(fields=['security_level'], name='payments_pa_securit_e0552f_idx'),
        ),
        migrations.AddIndex(
            model_name='paymentgateway',
            index=models.Index(fields=['created_at'], name='payments_pa_created_68fc05_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='clientpaymentmethod',
            unique_together={('client', 'gateway')},
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['reference'], name='payments_tr_referen_530efe_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['status'], name='payments_tr_status_96e6c0_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['created_at'], name='payments_tr_created_02ae92_idx'),
        ),
        migrations.AddIndex(
            model_name='transaction',
            index=models.Index(fields=['client', 'gateway'], name='payments_tr_client__f218f9_idx'),
        ),
        migrations.AddIndex(
            model_name='mpesacallbacklog',
            index=models.Index(fields=['configuration', 'status'], name='payments_mp_configu_ce338a_idx'),
        ),
        migrations.AddIndex(
            model_name='mpesacallbacklog',
            index=models.Index(fields=['created_at'], name='payments_mp_created_96686a_idx'),
        ),
        migrations.AddIndex(
            model_name='mpesacallbacklog',
            index=models.Index(fields=['transaction'], name='payments_mp_transac_91d517_idx'),
        ),
        migrations.AddIndex(
            model_name='transactionlog',
            index=models.Index(fields=['transaction_id'], name='payments_tr_transac_1fe1c9_idx'),
        ),
        migrations.AddIndex(
            model_name='transactionlog',
            index=models.Index(fields=['status'], name='payments_tr_status_000922_idx'),
        ),
        migrations.AddIndex(
            model_name='transactionlog',
            index=models.Index(fields=['created_at'], name='payments_tr_created_714f6a_idx'),
        ),
        migrations.AddIndex(
            model_name='transactionlog',
            index=models.Index(fields=['client', 'payment_method'], name='payments_tr_client__56b036_idx'),
        ),
        migrations.AddIndex(
            model_name='transactionlog',
            index=models.Index(fields=['phone_number'], name='payments_tr_phone_n_cdc9e8_idx'),
        ),
    ]
