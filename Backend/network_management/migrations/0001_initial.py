# Generated by Django 5.1.3 on 2025-01-28 14:30

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("user_management", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="DiagnosticResult",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "test_type",
                    models.CharField(
                        choices=[
                            ("ping", "Ping"),
                            ("traceroute", "Traceroute"),
                            ("health_check", "Health Check"),
                            ("bandwidth", "Bandwidth"),
                            ("dns", "DNS"),
                        ],
                        max_length=20,
                    ),
                ),
                ("target", models.CharField(max_length=255)),
                ("result", models.TextField()),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("success", "Success"),
                            ("error", "Error"),
                            ("idle", "Idle"),
                        ],
                        default="idle",
                        max_length=10,
                    ),
                ),
                ("timestamp", models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name="Router",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("ip_address", models.GenericIPAddressField()),
                ("username", models.CharField(max_length=255)),
                ("password", models.CharField(max_length=255)),
                ("version", models.CharField(blank=True, max_length=50, null=True)),
                ("status", models.CharField(default="Disconnected", max_length=20)),
                ("uptime", models.CharField(blank=True, max_length=50, null=True)),
                ("bandwidth", models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Subnet",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("network_address", models.GenericIPAddressField(unique=True)),
                ("netmask", models.CharField(max_length=18)),
            ],
        ),
        migrations.CreateModel(
            name="Device",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("device_id", models.IntegerField(unique=True)),
                ("mac", models.CharField(max_length=17)),
                ("allocated", models.CharField(max_length=20)),
                ("used", models.IntegerField(default=0)),
                (
                    "qos",
                    models.CharField(
                        choices=[
                            ("High", "High"),
                            ("Medium", "Medium"),
                            ("Low", "Low"),
                        ],
                        default="Low",
                        max_length=10,
                    ),
                ),
                ("quota", models.CharField(default="100", max_length=20)),
                ("unlimited", models.BooleanField(default=False)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="devices",
                        to="user_management.userprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="FirewallRule",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("Block", "Block"), ("Allow", "Allow")], max_length=10
                    ),
                ),
                ("ip", models.GenericIPAddressField()),
                ("description", models.TextField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="firewall_rules",
                        to="user_management.userprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GuestNetwork",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("network_name", models.CharField(max_length=100, unique=True)),
                ("isolation", models.BooleanField(default=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="guest_network",
                        to="user_management.userprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Port",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("port", models.IntegerField()),
                ("service", models.CharField(max_length=50)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="open_ports",
                        to="user_management.userprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="RegisteredDevice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("mac_address", models.CharField(max_length=17, unique=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="registered_devices",
                        to="user_management.userprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="SoftwareUpdate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("last_updated", models.DateTimeField()),
                ("status", models.CharField(max_length=100)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="software_updates",
                        to="user_management.userprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="IPAddress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("ip_address", models.GenericIPAddressField(unique=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("available", "Available"),
                            ("assigned", "Assigned"),
                            ("reserved", "Reserved"),
                        ],
                        default="available",
                        max_length=20,
                    ),
                ),
                (
                    "assigned_to",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("description", models.TextField(blank=True, null=True)),
                (
                    "subnet",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="ip_addresses",
                        to="network_management.subnet",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserSecurityProfile",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("two_factor_auth", models.BooleanField(default=False)),
                ("dns_encryption", models.CharField(default="Disabled", max_length=20)),
                ("device_limit", models.IntegerField(default=2)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="user_management.userprofile",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="VPNConnection",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("server", models.CharField(max_length=255)),
                ("connection_time", models.DateTimeField()),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="vpn_connections",
                        to="user_management.userprofile",
                    ),
                ),
            ],
        ),
    ]
