# Generated by Django 5.2.3 on 2025-09-10 14:14

import django.db.models.deletion
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('account', '0001_initial'),
        ('internet_plans', '0002_initial'),
        ('network_management', '0001_initial'),
        ('payments', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ActivationAttempt',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('attempted_at', models.DateTimeField(auto_now_add=True)),
                ('success', models.BooleanField(default=False)),
                ('error_message', models.TextField(blank=True)),
                ('retry_count', models.IntegerField(default=0)),
            ],
            options={
                'ordering': ['-attempted_at'],
            },
        ),
        migrations.CreateModel(
            name='RouterHealthCheck',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_online', models.BooleanField(default=False)),
                ('response_time', models.FloatField(blank=True, null=True)),
                ('error_message', models.TextField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='RouterSessionHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('data_used', models.BigIntegerField(default=0)),
                ('duration', models.IntegerField(default=0, help_text='Session duration in seconds')),
                ('disconnected_reason', models.CharField(blank=True, max_length=100, null=True)),
            ],
            options={
                'ordering': ['-start_time'],
            },
        ),
        migrations.AlterModelOptions(
            name='hotspotuser',
            options={'ordering': ['-connected_at']},
        ),
        migrations.AlterModelOptions(
            name='router',
            options={'ordering': ['-is_default', 'name']},
        ),
        migrations.AlterModelOptions(
            name='routerstats',
            options={'ordering': ['-timestamp']},
        ),
        migrations.RenameField(
            model_name='routerstats',
            old_name='clients',
            new_name='connected_clients_count',
        ),
        migrations.AddField(
            model_name='hotspotuser',
            name='disconnected_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='hotspotuser',
            name='last_activity',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='hotspotuser',
            name='latitude',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='hotspotuser',
            name='location_data',
            field=models.JSONField(default=dict),
        ),
        migrations.AddField(
            model_name='hotspotuser',
            name='longitude',
            field=models.FloatField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='hotspotuser',
            name='remaining_time',
            field=models.IntegerField(default=0, help_text='Remaining time in seconds'),
        ),
        migrations.AddField(
            model_name='hotspotuser',
            name='session_id',
            field=models.UUIDField(default=uuid.uuid4, editable=False),
        ),
        migrations.AddField(
            model_name='hotspotuser',
            name='total_session_time',
            field=models.IntegerField(default=0, help_text='Total session time in seconds'),
        ),
        migrations.AddField(
            model_name='router',
            name='captive_portal_enabled',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='router',
            name='is_active',
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name='router',
            name='is_default',
            field=models.BooleanField(default=False),
        ),
        migrations.AddIndex(
            model_name='hotspotuser',
            index=models.Index(fields=['mac'], name='network_man_mac_e3e7d2_idx'),
        ),
        migrations.AddIndex(
            model_name='hotspotuser',
            index=models.Index(fields=['session_id'], name='network_man_session_c71449_idx'),
        ),
        migrations.AddIndex(
            model_name='hotspotuser',
            index=models.Index(fields=['active'], name='network_man_active_7fe76e_idx'),
        ),
        migrations.AddField(
            model_name='activationattempt',
            name='router',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='network_management.router'),
        ),
        migrations.AddField(
            model_name='activationattempt',
            name='subscription',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='internet_plans.subscription'),
        ),
        migrations.AddField(
            model_name='routerhealthcheck',
            name='router',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='health_checks', to='network_management.router'),
        ),
        migrations.AddField(
            model_name='routersessionhistory',
            name='hotspot_user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='session_history', to='network_management.hotspotuser'),
        ),
        migrations.AddField(
            model_name='routersessionhistory',
            name='router',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='network_management.router'),
        ),
    ]
